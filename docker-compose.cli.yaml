
services:
  postgres:
    image: postgres:17-alpine
    container_name: ranking_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: prod_user
      POSTGRES_PASSWORD: prod_password
      POSTGRES_DB: ranking_system
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./seeds:/docker-entrypoint-initdb.d
      - ./migrations:/migrations

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.15
    hostname: zookeeper
    container_name: ranking_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.2.15
    hostname: kafka
    container_name: ranking_kafka
    depends_on:
      - zookeeper
      - postgres
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    healthcheck:
      test: [ "CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list" ]
#      test: [ "CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list || exit 1" ]

  kafka-init:
    image: confluentinc/cp-kafka:7.2.15
    container_name: ranking_kafka_init
    depends_on:
      kafka:
        condition: service_healthy
    command: >
      bash -c "
        echo 'Waiting for Kafka to be ready...'
        # Ожидаем, пока Kafka станет доступна
        cub kafka-ready -b kafka:9092 1 30
        echo 'Creating topic...'
        # Создаем топик с нужными параметрами
        kafka-topics --create --if-not-exists --bootstrap-server kafka:9092 --topic ranking_system_topic --partitions 1 --replication-factor 1
        echo 'Topic created successfully!'"
    environment:
      # Настройки для внутреннего общения между контейнерами
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181

volumes:
  pgdata:



#  kafka-init:
#    image: confluentinc/cp-kafka:7.2.15
#    container_name: ranking_kafka_init
#    depends_on:
#      - kafka
#    command: >
#      bash -c "
#        echo 'Waiting for Kafka to be ready...'
#        # Ожидаем, пока Kafka станет доступна
#        cub kafka-ready -b kafka:9092 1 30
#        echo 'Creating topic...'
#        # Создаем топик с нужными параметрами
#        kafka-topics --create --if-not-exists --bootstrap-server kafka:9092 --topic ranking_system_topic --partitions 1 --replication-factor 1
#        echo 'Topic created successfully!'"
#    environment:
#      # Настройки для внутреннего общения между контейнерами
#      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181