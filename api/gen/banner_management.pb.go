// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.0
// source: banner_management.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddBannerToSlotRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Banner        *Banner                `protobuf:"bytes,1,opt,name=banner,proto3" json:"banner,omitempty"`
	SlotId        int64                  `protobuf:"varint,2,opt,name=slot_id,json=slotId,proto3" json:"slot_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddBannerToSlotRequest) Reset() {
	*x = AddBannerToSlotRequest{}
	mi := &file_banner_management_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBannerToSlotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBannerToSlotRequest) ProtoMessage() {}

func (x *AddBannerToSlotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_banner_management_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBannerToSlotRequest.ProtoReflect.Descriptor instead.
func (*AddBannerToSlotRequest) Descriptor() ([]byte, []int) {
	return file_banner_management_proto_rawDescGZIP(), []int{0}
}

func (x *AddBannerToSlotRequest) GetBanner() *Banner {
	if x != nil {
		return x.Banner
	}
	return nil
}

func (x *AddBannerToSlotRequest) GetSlotId() int64 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

type AddBannerToSlotResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddBannerToSlotResponse) Reset() {
	*x = AddBannerToSlotResponse{}
	mi := &file_banner_management_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBannerToSlotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBannerToSlotResponse) ProtoMessage() {}

func (x *AddBannerToSlotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_banner_management_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBannerToSlotResponse.ProtoReflect.Descriptor instead.
func (*AddBannerToSlotResponse) Descriptor() ([]byte, []int) {
	return file_banner_management_proto_rawDescGZIP(), []int{1}
}

func (x *AddBannerToSlotResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AddBannerToSlotResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type RemoveBannerFromSlotRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Banner        *Banner                `protobuf:"bytes,1,opt,name=banner,proto3" json:"banner,omitempty"`
	SlotId        int64                  `protobuf:"varint,2,opt,name=slot_id,json=slotId,proto3" json:"slot_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveBannerFromSlotRequest) Reset() {
	*x = RemoveBannerFromSlotRequest{}
	mi := &file_banner_management_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveBannerFromSlotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveBannerFromSlotRequest) ProtoMessage() {}

func (x *RemoveBannerFromSlotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_banner_management_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveBannerFromSlotRequest.ProtoReflect.Descriptor instead.
func (*RemoveBannerFromSlotRequest) Descriptor() ([]byte, []int) {
	return file_banner_management_proto_rawDescGZIP(), []int{2}
}

func (x *RemoveBannerFromSlotRequest) GetBanner() *Banner {
	if x != nil {
		return x.Banner
	}
	return nil
}

func (x *RemoveBannerFromSlotRequest) GetSlotId() int64 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

type RemoveBannerFromSlotResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveBannerFromSlotResponse) Reset() {
	*x = RemoveBannerFromSlotResponse{}
	mi := &file_banner_management_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveBannerFromSlotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveBannerFromSlotResponse) ProtoMessage() {}

func (x *RemoveBannerFromSlotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_banner_management_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveBannerFromSlotResponse.ProtoReflect.Descriptor instead.
func (*RemoveBannerFromSlotResponse) Descriptor() ([]byte, []int) {
	return file_banner_management_proto_rawDescGZIP(), []int{3}
}

func (x *RemoveBannerFromSlotResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RemoveBannerFromSlotResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_banner_management_proto protoreflect.FileDescriptor

var file_banner_management_proto_rawDesc = string([]byte{
	0x0a, 0x17, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x72, 0x61, 0x6e, 0x6b, 0x69,
	0x6e, 0x67, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x1a, 0x0c, 0x62, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x61, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x42, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x54, 0x6f, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2e, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x17, 0x41, 0x64,
	0x64, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x54, 0x6f, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x66, 0x0a, 0x1b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x06, 0x62, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x22, 0x4e, 0x0a,
	0x1c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x46, 0x72, 0x6f,
	0x6d, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xf0, 0x01,
	0x0a, 0x17, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x62, 0x0a, 0x0f, 0x41, 0x64, 0x64,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x54, 0x6f, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x26, 0x2e, 0x72,
	0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x41, 0x64,
	0x64, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x54, 0x6f, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x54,
	0x6f, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a,
	0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x46, 0x72, 0x6f,
	0x6d, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x2b, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x5f,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x46, 0x72, 0x6f, 0x6d, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x53,
	0x65, 0x6c, 0x66, 0x65, 0x72, 0x52, 0x79, 0x2f, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x5f,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x3b, 0x67,
	0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_banner_management_proto_rawDescOnce sync.Once
	file_banner_management_proto_rawDescData []byte
)

func file_banner_management_proto_rawDescGZIP() []byte {
	file_banner_management_proto_rawDescOnce.Do(func() {
		file_banner_management_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_banner_management_proto_rawDesc), len(file_banner_management_proto_rawDesc)))
	})
	return file_banner_management_proto_rawDescData
}

var file_banner_management_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_banner_management_proto_goTypes = []any{
	(*AddBannerToSlotRequest)(nil),       // 0: ranking_system.AddBannerToSlotRequest
	(*AddBannerToSlotResponse)(nil),      // 1: ranking_system.AddBannerToSlotResponse
	(*RemoveBannerFromSlotRequest)(nil),  // 2: ranking_system.RemoveBannerFromSlotRequest
	(*RemoveBannerFromSlotResponse)(nil), // 3: ranking_system.RemoveBannerFromSlotResponse
	(*Banner)(nil),                       // 4: ranking_system.Banner
}
var file_banner_management_proto_depIdxs = []int32{
	4, // 0: ranking_system.AddBannerToSlotRequest.banner:type_name -> ranking_system.Banner
	4, // 1: ranking_system.RemoveBannerFromSlotRequest.banner:type_name -> ranking_system.Banner
	0, // 2: ranking_system.BannerManagementService.AddBannerToSlot:input_type -> ranking_system.AddBannerToSlotRequest
	2, // 3: ranking_system.BannerManagementService.RemoveBannerFromSlot:input_type -> ranking_system.RemoveBannerFromSlotRequest
	1, // 4: ranking_system.BannerManagementService.AddBannerToSlot:output_type -> ranking_system.AddBannerToSlotResponse
	3, // 5: ranking_system.BannerManagementService.RemoveBannerFromSlot:output_type -> ranking_system.RemoveBannerFromSlotResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_banner_management_proto_init() }
func file_banner_management_proto_init() {
	if File_banner_management_proto != nil {
		return
	}
	file_banner_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_banner_management_proto_rawDesc), len(file_banner_management_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_banner_management_proto_goTypes,
		DependencyIndexes: file_banner_management_proto_depIdxs,
		MessageInfos:      file_banner_management_proto_msgTypes,
	}.Build()
	File_banner_management_proto = out.File
	file_banner_management_proto_goTypes = nil
	file_banner_management_proto_depIdxs = nil
}
